// ** Задание 1, Профиль пользователя:
// Создай скрипт, который выполняет следующее:
// 1. Объяви константу userName и присвой ей строковое значение (своё имя).
// 2. Объяви переменную userAge и присвой ей числовое значение (свой возраст).
// 3. Объяви еще одну переменную isSubscribed и присвой ей логическое значение true или false, указывающее, подписан ли пользователь.
// 4. Выведи в консоль фразу, используя шаблонные строки, которая объединяет все эти переменные. Например: "Пользователь Иван (возраст: 30) подписан: true".
// 5. Ниже выведи в консоль тип каждой переменной, используя оператор typeof.

const userName = 'Sergey';
let userAge = 37;
let isSubscribed = true;

console.log(
  `Пользователь: ${userName} (возраст ${userAge}), подписан ${isSubscribed}`
); // Пользователь: Sergey (возраст 37), подписан true

console.log(typeof userName); // string
console.log(typeof userAge); // number
console.log(typeof isSubscribed); // boolean

// ** Задание 2, Проверка баланса:
// Представь, что пользователь хочет купить товар в интернет-магазине.
// 1. Создай константу itemPrice со значением 1500.
// 2. Создай константу itemQuantity со значением 2.
// 3. Создай переменную userBalance со значением 5000.
// 4. Вычисли общую стоимость покупки, сохранив её в константу totalCost.
// 5. Используя конструкцию if...else, проверь, достаточно ли у пользователя средств на балансе (userBalance) для оплаты totalCost.
// - Если средств достаточно, выведи в консоль сообщение: Покупка совершена. На вашем балансе осталось [сумма] кредитов.
// - Если средств недостаточно, выведи сообщение: Недостаточно средств. Вам не хватает [сумма] кредитов.

const itemPrice = 1500;
const itemQuantity = 2;
const totalCost = itemPrice * itemQuantity;
let userBalance = 5000;

if (userBalance >= totalCost) {
  console.log(
    `Покупка совершена! На вашем балансе осталось ${
      userBalance - totalCost
    } кредитов.`
  );
} else {
  console.log(
    `Недостаточно средств! Вам не хватает ${totalCost - userBalance} кредитов.`
  );
}

/*
Покупка совершена! На вашем балансе осталось 2000 кредитов.
*/

// ** Задание 3, Определение статуса пользователя:
// В твоей системе пользователи могут иметь несколько статусов, представленных одним символом. Тебе нужно написать скрипт, который выводит полное описание статуса.
// 1. Создай переменную userStatus и присвой ей одно из следующих значений: 'A', 'I', или 'B'.
// 2. Используя конструкцию switch, проверь значение userStatus:
// - Если статус 'A', выведи в консоль Статус: Активен.
// - Если статус 'I', выведи в консоль Статус: Неактивен.
// - Если статус 'B', выведи в консоль Статус: Забанен.
// 3. Добавь вариант default, который будет срабатывать, если userStatus имеет любое другое значение. В этом случае выведи Статус: Неизвестен.
// 4. Проверь, как твой код работает с каждым из трёх статусов, а также с каким-нибудь другим значением (например, 'X').

function checkStatus(status = 'i') {
  switch (status.toLocaleLowerCase()) {
    case 'a':
      return 'Статус: Активен.';
    case 'b':
      return 'Статус: Забанен.';
    case 'i':
      return 'Статус: Неактивен.';
    default:
      return 'Статус: Неизвестен..';
  }
}

console.log(checkStatus('A')); // Статус: Активен.
console.log(checkStatus('b')); // Статус: Забанен.
console.log(checkStatus('I')); // Статус: Неактивен.
console.log(checkStatus('X')); // Статус: Неизвестен..
console.log(checkStatus()); // Статус: Неактивен.

// ** Задание 4, Допуск к экзамену по вождению:
// Напиши небольшой скрипт для определения, может ли кандидат получить водительские права.
// 1. Создай две переменные: age (возраст, число) и hasVisionProblems (есть ли проблемы со зрением, true или false).
// 2. Используя логические операторы (&&, ||, !) и тернарный оператор (? :), присвой результат проверки переменной accessStatus.
// 3. Логика должна быть следующей: если кандидату 18 лет или больше И у него нет проблем со зрением (hasVisionProblems равно false), то accessStatus должен получить строку 'Допущен к экзамену'. В противном случае — 'Не допущен к экзамену'.
// 4. Выведи значение переменной accessStatus в консоль.
// 5. Протестируй код с разными значениями age и hasVisionProblems.

let age = 21;
let hasVisionProblems = true;

let accessStatus =
  age >= 18 && !hasVisionProblems
    ? 'Допущен к экзамену!'
    : 'Не допущен к экзамену!';

console.log(accessStatus); // Не допущен к экзамену!

// ** Задание 5, Валидация пароля:
// Напишем небольшой скрипт, который имитирует проверку пароля. Будь внимателен к типам данных!
// 1. Создай константу savedPassword и присвой ей числовое значение 12345.
// 2. Создай переменную userInputPassword и присвой ей строковое значение '12345'.
// 3. Напиши конструкцию if...else if...else для проверки пароля:
// - Первая проверка (самая строгая): Используя оператор ===, проверь, совпадает ли userInputPassword с savedPassword. Если да, выведи в консоль: Доступ разрешен (строгое равенство).
// - Вторая проверка: Если первая не прошла, используя оператор ==, проверь, совпадают ли пароли. Если да, выведи: Доступ разрешен, но типы данных не совпадают (нестрогое равенство).
// - Последний случай: Если ни одно из условий не выполнилось, выведи: Доступ запрещен.
// 4. Протестируй свой код. Затем измени userInputPassword на 'hello' и проверь еще раз.

const savedPassword = 12345;
// let userInputPassword = '12345';
let userInputPassword = 'Hello!';

if (savedPassword === userInputPassword) {
  console.log('Доступ разрешен (строгое равенство)!');
} else if (savedPassword == userInputPassword) {
  console.log(
    'Доступ разрешен, но типы данных не совпадают (нестрогое равенство)!'
  );
} else {
  console.log('Доступ запрещен!');
}

/*
Доступ разрешен, но типы данных не совпадают (нестрогое равенство)!
..или
Доступ запрещен!
*/
